# A sample Guardfile with additions
# More info at https://github.com/guard/guard#readme

# Note that Hartl's advanced setup youtube video has require 'active_support/core_ext' here, but I leave it commented out
# require 'active_support/core_ext'

# this block was added by bundle exec guard init spork, then manuall moved to the top of the file
guard 'spork', :cucumber_env => { 'RAILS_ENV' => 'test' }, :rspec_env => { 'RAILS_ENV' => 'test' } do
  watch('config/application.rb')
  watch('config/environment.rb')
  watch(%r{^config/environments/.+\.rb$})
  watch(%r{^config/initializers/.+\.rb$})
  watch('Gemfile')
  watch('Gemfile.lock')
  watch('spec/spec_helper.rb')
  watch('test/test_helper.rb')
end

# guard 'rspec', :version => 2 do  (this is the original sample line)
guard 'rspec', :version => 2, :all_after_pass => false do
  watch(%r{^spec/.+_spec\.rb$})
  watch(%r{^lib/(.+)\.rb$})     { |m| "spec/lib/#{m[1]}_spec.rb" }
  watch('spec/spec_helper.rb')  { "spec" }

  # Rails example
  watch(%r{^spec/.+_spec\.rb$})
  watch(%r{^app/(.+)\.rb$})                           { |m| "spec/#{m[1]}_spec.rb" }
  watch(%r{^app/(.*)(\.erb|\.haml)$})                 { |m| "spec/#{m[1]}#{m[2]}_spec.rb" }
  watch(%r{^lib/(.+)\.rb$})                           { |m| "spec/lib/#{m[1]}_spec.rb" }
  watch(%r{^app/controllers/(.+)_(controller)\.rb$})  { |m| ["spec/routing/#{m[1]}_routing_spec.rb", "spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb", "spec/acceptance/#{m[1]}_spec.rb"] }
  watch(%r{^spec/support/(.+)\.rb$})                  { "spec" }
  watch('spec/spec_helper.rb')                        { "spec" }
  watch('config/routes.rb')                           { "spec/routing" }
  watch('app/controllers/application_controller.rb')  { "spec/controllers" }
  # Capybara request specs
  watch(%r{^app/views/(.+)/.*\.(erb|haml)$})          { |m| "spec/requests/#{m[1]}_spec.rb" }
# the following blocks hand-copied from the youtube rails tutorial advanced installation screencast 
  # watch(%r{app/controllers/(.+)_(controller)\.rb$})  do |m|
  #   ["spec/routing/#{m[1]}_routing_spec.rb",
  #   "spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb",
  #   "spec/acceptance/#{m[1]}_spec.rb",
  #   "spec/requests/#{m[1].singularize}_pages_spec.rb"]
  # end
  # watch(%r{^app/views/(.+)/}) do |m|
  #   "spec/requests/#{m[1].singularize}_pages_spec.rb"
  # end
# the following blocks copied and pasted from the rails tutorial book
  watch(%r{^app/controllers/(.+)_(controller)\.rb$})  do |m|
    ["spec/routing/#{m[1]}_routing_spec.rb",
     "spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb",
     "spec/acceptance/#{m[1]}_spec.rb",
     (m[1][/_pages/] ? "spec/requests/#{m[1]}_spec.rb" : 
                       "spec/requests/#{m[1].singularize}_pages_spec.rb")]
  end
  watch(%r{^app/views/(.+)/}) do |m|
    (m[1][/_pages/] ? "spec/requests/#{m[1]}_spec.rb" : 
                      "spec/requests/#{m[1].singularize}_pages_spec.rb")
  end
end

# At the moment, this file isn't working properly.
# I started by trying to copy the guardfile from the rails tutorial online book,
# but it wasn't clear where the additional code was supposed to fit into the code that was
# automatically generated by the bundle exec guard init rspec command
# the file above is copied from the youtube rails tutorial advanced installation screencast
# the error I get is:  undefined method `singularize' for "application":String
# and the error messages seem to point to a problem on line 42.

# I commented out the code that I hand copied from the youtube video, and pasted the code in
# from chapter 3 of the rails tutorial book, this time putting it (I believe) in the right place.

# Having done this, the error persists, this time appearing on line 53
# But at least I'm fairly confident that I have put the code in the right order this time
# So the error may be simply that there are no files to load.


guard 'rspec', :version => 2 do
  watch(%r{^spec/.+_spec\.rb$})
  watch(%r{^lib/(.+)\.rb$})     { |m| "spec/lib/#{m[1]}_spec.rb" }
  watch('spec/spec_helper.rb')  { "spec" }

  # Rails example
  watch(%r{^app/(.+)\.rb$})                           { |m| "spec/#{m[1]}_spec.rb" }
  watch(%r{^app/(.*)(\.erb|\.haml)$})                 { |m| "spec/#{m[1]}#{m[2]}_spec.rb" }
  watch(%r{^app/controllers/(.+)_(controller)\.rb$})  { |m| ["spec/routing/#{m[1]}_routing_spec.rb", "spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb", "spec/acceptance/#{m[1]}_spec.rb"] }
  watch(%r{^spec/support/(.+)\.rb$})                  { "spec" }
  watch('config/routes.rb')                           { "spec/routing" }
  watch('app/controllers/application_controller.rb')  { "spec/controllers" }
  
  # Capybara request specs
  watch(%r{^app/views/(.+)/.*\.(erb|haml)$})          { |m| "spec/requests/#{m[1]}_spec.rb" }
  
  # Turnip features and steps
  watch(%r{^spec/acceptance/(.+)\.feature$})
  watch(%r{^spec/acceptance/steps/(.+)_steps\.rb$})   { |m| Dir[File.join("**/#{m[1]}.feature")][0] || 'spec/acceptance' }
end

